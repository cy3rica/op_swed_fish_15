-- This query sets up data for FY15 mid-year student performance data reporting: Attendance.
-- Steps 1.1, 1.2, and 1.3 nest within step 2, which nests within step 3, etc. Replace "*****ABOVE_QUERY*****" with the query text in the preceding step.
-- The final section (QUERY SYNTAX (SINGLE QUERY VERSION)) is the final query that should be set up in a stored procedure in the reporting DB. This step is just a copy of all previous steps, properly nested.

-- Create proxy ADA data points separately for monthly attendance, marking period-based attendance, and cumulative attendance. Then merge to available pre/post data tables, and then select proxy data point.
-- Pulling in proxy data point based on null POST_ATT_ADA, not post tag. This is because dbo_EVAL_ATT won't calc DJFM for some students, while proxy may.


-- QUERY SYNTAX (Calculate marking period-based ADA proxy data point based on marking period attendance data. No need to merge in performance level column from dbo_ATTENDANCE_CONFIG_BENCHMARKS since there's no need for aggregation performance level variable already available. -- STEP 1.1):

SELECT att1.STUDENT_ID, att1.CONFIG_ID, att1.INTERVAL, att1.PERF_ADA AS MY_ADA, att1.SCALE_LOCAL
FROM ReportCYData.dbo.RPT_PERFORMANCE_LEVEL_ATT AS att1 LEFT JOIN ReportCYData.dbo.RPT_PERFORMANCE_LEVEL_ATT AS att2
ON att1.STUDENT_ID = att2.STUDENT_ID AND att1.FREQUENCY_PERIOD_ID < att2.FREQUENCY_PERIOD_ID
WHERE att2.STUDENT_ID IS NULL AND att1.FISCAL_YEAR LIKE '2014-2015' AND att1.INTERVAL NOT LIKE '1st%' AND att1.Tag IS NULL AND (att1.INTERVAL LIKE '%Semester' OR att1.INTERVAL LIKE '%Trimester' OR att1.INTERVAL LIKE '%Quarter' OR att1.INTERVAL LIKE '%Marking Period') AND att1.PERF_ADA IS NOT NULL AND att1.PERF_ADA >= 0;


-- QUERY SYNTAX (Calculate DJFM ADA proxy data point based on monthly attendance data. Only calculate proxy data point if there is at least two months worth of data available. Merge in performance level column from dbo_ATTENDANCE_CONFIG_BENCHMARKS based on newly calculated mid-year proxy ADA. -- STEP 1.2):

SELECT attDJFM.STUDENT_ID, attDJFM.countDP, attDJFM.sumMD, attDJFM.sumNED, attDJFM.sumSO, attDJFM.MY_CONFIG_ID, attDJFM.MY_ADA,
attConfig11.SCALE
FROM
	(SELECT att12_2.STUDENT_ID, att12_2.countDP, att12_2.sumMD, att12_2.sumNED, att12_2.sumSO, att12_2.MY_CONFIG_ID,
	CASE WHEN att12_2.countDP >= 2 THEN (att12_2.sumSO - att12_2.sumNED - att12_2.sumMD)/(att12_2.sumSO - att12_2.sumNED) ELSE NULL END AS MY_ADA
	FROM
		(SELECT att12.STUDENT_ID, COUNT(att12.PERF_ADA) AS countDP, SUM(att12.MISSED_DAYS) AS sumMD, SUM(att12.NOT_ENROLLED_DAYS) AS sumNED, SUM(att12.SCHOOL_OPEN) AS sumSO, AVG(att12.CONFIG_ID) AS MY_CONFIG_ID
		FROM ReportCYData.dbo.RPT_PERFORMANCE_LEVEL_ATT AS att12
		WHERE (att12.INTERVAL LIKE 'Dec' OR att12.INTERVAL LIKE 'Jan' OR att12.INTERVAL LIKE 'Feb' OR att12.INTERVAL LIKE 'Mar') AND att12.PERF_ADA IS NOT NULL AND att12.PERF_ADA >= 0 AND att12.FISCAL_YEAR LIKE '2014-2015'
		GROUP BY att12.STUDENT_ID)
	AS att12_2)
AS attDJFM LEFT JOIN ReportCYData.dbo.ATTENDANCE_CONFIG_BENCHMARKS AS attConfig11
ON attDJFM.MY_CONFIG_ID = attConfig11.CONFIG_ID AND attDJFM.MY_ADA >= attConfig11.MIN_VALUE AND attDJFM.MY_ADA <= attConfig11.MAX_VALUE
WHERE attConfig11.FISCAL_YEAR LIKE '2014-2015';


-- QUERY SYNTAX (Calculate current year cumulative ADA proxy data point based on monthly or marking period-baed attendance data. Only calculate proxy current year cumulative ADA if there's at least 1 semester/trimester data point, 2 quarterly data points, 3 6-marking period data points, or 5 monthly data points. Merge in performance level column from dbo_ATTENDANCE_CONFIG_BENCHMARKS based on newly calculated mid-year proxy ADA. -- STEP 1.3):

SELECT attCumul.STUDENT_ID, attCumul.avgFREQID, attCumul.countDP, attCumul.sumMD, attCumul.sumNED, attCumul.sumSO, attCumul.MY_CONFIG_ID, attCumul.MY_ADA, attConfig13.SCALE
FROM
	(SELECT att13_2.STUDENT_ID, att13_2.avgFREQID, att13_2.countDP, att13_2.sumMD, att13_2.sumNED, att13_2.sumSO, att13_2.MY_CONFIG_ID,
	CASE WHEN (((att13_2.avgFREQID >= 68 AND att13_2.avgFREQID <= 69) OR (att13_2.avgFREQID >= 35 AND att13_2.avgFREQID <= 37)) AND att13_2.countDP >= 1) OR (att13_2.avgFREQID >= 31 AND att13_2.avgFREQID <= 34 AND att13_2.countDP >= 2) OR (att13_2.avgFREQID >= 13 AND att13_2.avgFREQID <= 18 AND att13_2.countDP >= 3) OR (att13_2.avgFREQID >= 47 AND att13_2.avgFREQID <= 57 AND att13_2.countDP >= 5) THEN (((att13_2.sumSO - att13_2.sumNED - att13_2.sumMD) * 1.0)/((att13_2.sumSO - att13_2.sumNED) * 1.0)) ELSE NULL END AS MY_ADA
	FROM
		(SELECT att13.STUDENT_ID, AVG(att13.FREQUENCY_PERIOD_ID) AS avgFREQID, COUNT(att13.PERF_ADA) AS countDP, SUM(att13.MISSED_DAYS) AS sumMD, SUM(att13.NOT_ENROLLED_DAYS) AS sumNED, SUM(att13.SCHOOL_OPEN) AS sumSO, AVG(att13.CONFIG_ID) AS MY_CONFIG_ID
		FROM ReportCYData.dbo.RPT_PERFORMANCE_LEVEL_ATT as att13
		WHERE att13.INTERVAL NOT LIKE 'Attendance PrYr' AND att13.PERF_ADA IS NOT NULL AND att13.PERF_ADA >= 0 AND att13.FISCAL_YEAR LIKE '2014-2015'
		GROUP BY att13.STUDENT_ID)
	AS att13_2)
AS attCumul LEFT JOIN ReportCYData.dbo.ATTENDANCE_CONFIG_BENCHMARKS AS attConfig13
ON attCumul.MY_CONFIG_ID = attConfig13.CONFIG_ID AND attCumul.MY_ADA >= attConfig13.MIN_VALUE AND attCumul.MY_ADA <= attConfig13.MAX_VALUE
WHERE attConfig13.FISCAL_YEAR LIKE '2014-2015';


-- QUERY SYNTAX (Merge in columns from RPT_STUDENT_MAIN, RPT_SCHOOL_GRADE, and the selected data points from the queries above, to EVAL_ATT (pre/post data). Select post/proxy-post data points, where the post data point is selected if available, otherwise use the proxy performance data. Calculate additional MY/EOY variables for reporting. -- BASED ON ABOVE QUERY -- STEP 2):

SELECT ReportCYData.dbo.RPT_STUDENT_MAIN.SITE_NAME, ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_NAME, ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID, ReportCYData.dbo.RPT_STUDENT_MAIN.DIPLOMAS_NOW_SCHOOL, ReportCYData.dbo.RPT_STUDENT_MAIN.STUDENT_ID, ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_ID, prepost.PRE_SKILL_DESC, prepost.PRE_FREQ_DESC, prepost.PRE_SCENARIO, prepost.PRE_ATT_ADA, prepost.PRE_ATT_SCHOOL_OPEN, prepost.PRE_ATT_MISSING, prepost.PRE_ATT_NOT_ENROLLED, prepost.PRE_ATT_TRACK, prepost.PRE_ATT_TRACK_EVAL, prepost.PRE_INVALID_ADA, prepost.POST_SKILL_DESC, prepost.POST_FREQ_DESC, prepost.POST_SCENARIO, prepost.POST_ATT_ADA, prepost.POST_ATT_SCHOOL_OPEN, prepost.POST_ATT_MISSING, prepost.POST_ATT_NOT_ENROLLED, prepost.POST_ATT_TRACK, prepost.POST_ATT_TRACK_EVAL, prepost.POST_INVALID_ADA, prepost.DOSAGE_CATEGORY, prepost.TTL_TIME, prepost.ENROLLED_DAYS_CATEGORIES, prepost.CURRENTLY_ENROLLED, prepost.ENROLLED_DAYS, prepost.ATT_PERFORMANCE_CHANGE_LOCAL, prepost.ATT_PERFORMANCE_CHANGE_NATIONAL, prepost.ATT_ADA_CHANGE, prepost.ATT_ADA_CHANGE_TYPE, prepost.Attendance_IA, prepost.ELA_IA, prepost.Math_IA, prepost.Behavior_IA, prepost.FISCAL_YEAR, ReportCYData.dbo.RPT_SCHOOL_GRADE.INDICATOR_ID, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL1, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL3, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL4, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL5,
CASE WHEN prepost.PRE_ATT_ADA <= 0.99 AND ATT_ADA_CHANGE >= 0.01 THEN 'Increase by at least 1 percentage point' WHEN prepost.PRE_ATT_ADA <= 0.99 AND ATT_ADA_CHANGE <= -0.01 THEN 'Decrease by at least 1 percentage point' WHEN prepost.PRE_ATT_ADA <= 0.99 AND ATT_ADA_CHANGE < 0.01 AND ATT_ADA_CHANGE > -0.01 THEN 'No change' ELSE NULL END AS EOY_ATT_ADA_CHANGE_TYPE,
CASE WHEN prepost.PRE_ATT_ADA <= 0.98 AND ATT_ADA_CHANGE >= 0.02 THEN 1 WHEN prepost.PRE_ATT_ADA <= 0.98 AND ATT_ADA_CHANGE < 0.02 THEN 0 ELSE NULL END AS EOY_ATT_INC_BY_2_PERC_PT,
CASE WHEN ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID = 21 THEN -1 WHEN ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID = 22 THEN 0 ELSE ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID END AS GRADE_ID_RECODE,
CASE WHEN prepost.ENROLLED_DAYS >= 56 THEN 1 WHEN prepost.ENROLLED_DAYS < 56 THEN 0 ELSE NULL END AS EOY_MET_56_DAYS,
CASE WHEN prepost.PRE_ATT_ADA < 0.9 AND prepost.POST_ATT_ADA >= 0.9 THEN 1 WHEN prepost.PRE_ATT_ADA < 0.9 AND prepost.POST_ATT_ADA < 0.9 THEN 0 ELSE NULL END AS OG_EOY_LT_90_TO_GTE,
MY_PROXY_ATTMP.INTERVAL AS PROXY_ATTMP_FREQ_DESC, MY_PROXY_ATTMP.MY_ADA AS PROXY_ATTMP_ADA, MY_PROXY_ATTMP.SCALE_LOCAL AS PROXY_ATTMP_TRACK, MY_PROXY_ATTDJFM.MY_ADA AS PROXY_ATTDJFM_ADA, MY_PROXY_ATTDJFM.SCALE AS PROXY_ATTDJFM_TRACK, MY_PROXY_ATTCUMUL.MY_ADA AS PROXY_ATTCUMUL_ADA, MY_PROXY_ATTCUMUL.SCALE AS PROXY_ATTCUMUL_TRACK,
CASE WHEN prepost.POST_ATT_ADA IS NULL AND prepost.PRE_FREQ_DESC LIKE 'ASON' THEN MY_PROXY_ATTDJFM.MY_ADA WHEN prepost.POST_ATT_ADA IS NULL AND (prepost.PRE_FREQ_DESC LIKE '%Semester' OR prepost.PRE_FREQ_DESC LIKE '%Trimester' OR prepost.PRE_FREQ_DESC LIKE '%Quarter' OR prepost.PRE_FREQ_DESC LIKE '%Marking Period') THEN MY_PROXY_ATTMP.MY_ADA WHEN prepost.PRE_ATT_ADA IS NULL AND prepost.PRE_FREQ_DESC LIKE 'Attendance PrYr' THEN MY_PROXY_ATTCUMUL.MY_ADA ELSE prepost.POST_ATT_ADA END AS MY_ADA,
CASE WHEN prepost.POST_ATT_ADA IS NULL AND prepost.PRE_FREQ_DESC LIKE 'ASON' THEN MY_PROXY_ATTDJFM.SCALE WHEN prepost.POST_ATT_ADA IS NULL AND (prepost.PRE_FREQ_DESC LIKE '%Semester' OR prepost.PRE_FREQ_DESC LIKE '%Trimester' OR prepost.PRE_FREQ_DESC LIKE '%Quarter' OR prepost.PRE_FREQ_DESC LIKE '%Marking Period') THEN MY_PROXY_ATTMP.SCALE_LOCAL WHEN prepost.PRE_ATT_ADA IS NULL AND prepost.PRE_FREQ_DESC LIKE 'Attendance PrYr' THEN MY_PROXY_ATTCUMUL.SCALE ELSE prepost.POST_ATT_TRACK END AS MY_TRACK
FROM ReportCYData.dbo.RPT_SCHOOL_GRADE INNER JOIN (ReportCYData.dbo.RPT_STUDENT_MAIN INNER JOIN (((ReportCYData.dbo.EVAL_ATT AS prepost LEFT JOIN
(*****ABOVE_QUERY 1.1 Marking Period*****)
AS MY_PROXY_ATTMP ON (prepost.STUDENT_ID = MY_PROXY_ATTMP.STUDENT_ID))
LEFT JOIN
(*****ABOVE_QUERY 1.2 DJFM*****)
AS MY_PROXY_ATTDJFM ON (prepost.STUDENT_ID = MY_PROXY_ATTDJFM.STUDENT_ID))
LEFT JOIN
(*****ABOVE_QUERY 1.3 Cumulative*****)
AS MY_PROXY_ATTCUMUL ON (prepost.STUDENT_ID = MY_PROXY_ATTCUMUL.STUDENT_ID))
ON ReportCYData.dbo.RPT_STUDENT_MAIN.STUDENT_ID = prepost.STUDENT_ID)
ON ReportCYData.dbo.RPT_SCHOOL_GRADE.SCHOOL_ID = ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_ID AND ReportCYData.dbo.RPT_SCHOOL_GRADE.GRADE_ID = ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID
WHERE ReportCYData.dbo.RPT_SCHOOL_GRADE.INDICATOR_ID = 1 AND prepost.FISCAL_YEAR LIKE '2014-2015' AND ReportCYData.dbo.RPT_SCHOOL_GRADE.FISCAL_YEAR LIKE '2014-2015';


-- QUERY SYNTAX (Calculate additional post/proxy-post and MY operating goal variables -- BASED ON ABOVE QUERY -- STEP 3 -- this extra step is required since calculations on new variables can't reference variables that were just created in the same query):

SELECT MY_PROXY_ATT.SITE_NAME, MY_PROXY_ATT.SCHOOL_NAME, MY_PROXY_ATT.GRADE_ID, MY_PROXY_ATT.DIPLOMAS_NOW_SCHOOL, MY_PROXY_ATT.STUDENT_ID, MY_PROXY_ATT.SCHOOL_ID, MY_PROXY_ATT.PRE_SKILL_DESC, MY_PROXY_ATT.PRE_FREQ_DESC, MY_PROXY_ATT.PRE_SCENARIO, MY_PROXY_ATT.PRE_ATT_ADA, MY_PROXY_ATT.PRE_ATT_SCHOOL_OPEN, MY_PROXY_ATT.PRE_ATT_MISSING, MY_PROXY_ATT.PRE_ATT_NOT_ENROLLED, MY_PROXY_ATT.PRE_ATT_TRACK, MY_PROXY_ATT.PRE_ATT_TRACK_EVAL, MY_PROXY_ATT.PRE_INVALID_ADA, MY_PROXY_ATT.POST_SKILL_DESC, MY_PROXY_ATT.POST_FREQ_DESC, MY_PROXY_ATT.POST_SCENARIO, MY_PROXY_ATT.POST_ATT_ADA, MY_PROXY_ATT.POST_ATT_SCHOOL_OPEN, MY_PROXY_ATT.POST_ATT_MISSING, MY_PROXY_ATT.POST_ATT_NOT_ENROLLED, MY_PROXY_ATT.POST_ATT_TRACK, MY_PROXY_ATT.POST_ATT_TRACK_EVAL, MY_PROXY_ATT.POST_INVALID_ADA, MY_PROXY_ATT.DOSAGE_CATEGORY, MY_PROXY_ATT.TTL_TIME, MY_PROXY_ATT.ENROLLED_DAYS_CATEGORIES, MY_PROXY_ATT.CURRENTLY_ENROLLED, MY_PROXY_ATT.ENROLLED_DAYS, MY_PROXY_ATT.ATT_PERFORMANCE_CHANGE_LOCAL, MY_PROXY_ATT.ATT_PERFORMANCE_CHANGE_NATIONAL, MY_PROXY_ATT.ATT_ADA_CHANGE, MY_PROXY_ATT.ATT_ADA_CHANGE_TYPE, MY_PROXY_ATT.Attendance_IA, MY_PROXY_ATT.ELA_IA, MY_PROXY_ATT.Math_IA, MY_PROXY_ATT.Behavior_IA, MY_PROXY_ATT.FISCAL_YEAR, MY_PROXY_ATT.INDICATOR_ID, MY_PROXY_ATT.B_RULE_VAL1, MY_PROXY_ATT.B_RULE_VAL2, MY_PROXY_ATT.B_RULE_VAL3, MY_PROXY_ATT.B_RULE_VAL4, MY_PROXY_ATT.B_RULE_VAL5, MY_PROXY_ATT.EOY_ATT_ADA_CHANGE_TYPE, MY_PROXY_ATT.EOY_ATT_INC_BY_2_PERC_PT, MY_PROXY_ATT.GRADE_ID_RECODE, MY_PROXY_ATT.EOY_MET_56_DAYS, MY_PROXY_ATT.OG_EOY_LT_90_TO_GTE, MY_PROXY_ATT.PROXY_ATTMP_FREQ_DESC, MY_PROXY_ATT.PROXY_ATTMP_ADA, MY_PROXY_ATT.PROXY_ATTMP_TRACK, MY_PROXY_ATT.PROXY_ATTDJFM_ADA, MY_PROXY_ATT.PROXY_ATTDJFM_TRACK, MY_PROXY_ATT.PROXY_ATTCUMUL_ADA, MY_PROXY_ATT.PROXY_ATTCUMUL_TRACK,
CASE WHEN MY_PROXY_ATT.POST_ATT_ADA IS NULL AND MY_PROXY_ATT.PRE_FREQ_DESC LIKE 'ASON' AND MY_PROXY_ATT.MY_ADA IS NOT NULL THEN 'DJFM' WHEN MY_PROXY_ATT.POST_ATT_ADA IS NULL AND (MY_PROXY_ATT.PRE_FREQ_DESC LIKE '%Semester' OR MY_PROXY_ATT.PRE_FREQ_DESC LIKE '%Trimester' OR MY_PROXY_ATT.PRE_FREQ_DESC LIKE '%Quarter' OR MY_PROXY_ATT.PRE_FREQ_DESC LIKE '%Marking Period') AND MY_PROXY_ATT.MY_ADA IS NOT NULL THEN MY_PROXY_ATT.PROXY_ATTMP_FREQ_DESC WHEN MY_PROXY_ATT.POST_ATT_ADA IS NULL AND MY_PROXY_ATT.PRE_FREQ_DESC LIKE 'Attendance PrYr' AND MY_PROXY_ATT.MY_ADA IS NOT NULL THEN 'Cumulative To-Date' WHEN MY_PROXY_ATT.MY_ADA IS NULL THEN NULL ELSE MY_PROXY_ATT.POST_FREQ_DESC END AS MY_FREQ_DESC,
MY_PROXY_ATT.MY_ADA, MY_PROXY_ATT.MY_TRACK,
CASE WHEN MY_PROXY_ATT.PRE_ATT_ADA IS NOT NULL AND MY_PROXY_ATT.MY_ADA IS NOT NULL THEN MY_PROXY_ATT.MY_ADA - MY_PROXY_ATT.PRE_ATT_ADA ELSE NULL END AS MY_ADA_CHANGE,
CASE WHEN MY_PROXY_ATT.PRE_ATT_TRACK IS NOT NULL AND MY_PROXY_ATT.MY_TRACK IS NOT NULL THEN MY_PROXY_ATT.PRE_ATT_TRACK + ' to ' + MY_PROXY_ATT.MY_TRACK ELSE 'Insufficient Data' END AS MY_ATT_PERFORMANCE_CHANGE_LOCAL,
CASE WHEN MY_PROXY_ATT.PRE_ATT_ADA < 0.9 AND MY_PROXY_ATT.MY_ADA >= 0.9 THEN 1 WHEN MY_PROXY_ATT.PRE_ATT_ADA < 0.9 AND MY_PROXY_ATT.MY_ADA < 0.9 THEN 0 ELSE NULL END AS OG_MY_LT_90_TO_GTE
FROM
(*****ABOVE_QUERY*****)
AS MY_PROXY_ATT;


-- QUERY SYNTAX (Re-populate old table, calculate final MY post/proxy-post change variables -- BASED ON ABOVE QUERY -- STEP 4 -- this extra step is required since calculations/joins on new variables can't reference variables that were just created in the same query):

DROP TABLE ImpactAnalytics.dbo.FY15_MY_ATT_subtable
SELECT ATT.*,
CASE WHEN ATT.PRE_ATT_ADA <= 0.99 AND ATT.MY_ADA_CHANGE >= 0.01 THEN 'Increase by at least 1 percentage point' WHEN ATT.PRE_ATT_ADA <= 0.99 AND ATT.MY_ADA_CHANGE <= -0.01 THEN 'Decrease by at least 1 percentage point' WHEN ATT.PRE_ATT_ADA <= 0.99 AND ATT.MY_ADA_CHANGE < 0.01 AND ATT.MY_ADA_CHANGE > -0.01 THEN 'No Change' ELSE NULL END AS MY_ATT_ADA_CHANGE_TYPE,
CASE WHEN ATT.PRE_ATT_ADA <= 0.98 AND ATT.MY_ADA_CHANGE >= 0.02 THEN 1 WHEN ATT.PRE_ATT_ADA <= 0.98 AND ATT.MY_ADA_CHANGE < 0.02 THEN 0 ELSE NULL END AS MY_ATT_INC_BY_2_PERC_PT
INTO ImpactAnalytics.dbo.FY15_MY_ATT_subtable
FROM
(*****ABOVE_QUERY*****)
AS ATT
ORDER BY SITE_NAME, SCHOOL_NAME, GRADE_ID, STUDENT_ID;


-- QUERY SYNTAX (SINGLE QUERY VERSION):

DROP TABLE ImpactAnalytics.dbo.FY15_MY_ATT_subtable
SELECT ATT.*,
CASE WHEN ATT.PRE_ATT_ADA <= 0.99 AND ATT.MY_ADA_CHANGE >= 0.01 THEN 'Increase by at least 1 percentage point' WHEN ATT.PRE_ATT_ADA <= 0.99 AND ATT.MY_ADA_CHANGE <= -0.01 THEN 'Decrease by at least 1 percentage point' WHEN ATT.PRE_ATT_ADA <= 0.99 AND ATT.MY_ADA_CHANGE < 0.01 AND ATT.MY_ADA_CHANGE > -0.01 THEN 'No Change' ELSE NULL END AS MY_ATT_ADA_CHANGE_TYPE,
CASE WHEN ATT.PRE_ATT_ADA <= 0.98 AND ATT.MY_ADA_CHANGE >= 0.02 THEN 1 WHEN ATT.PRE_ATT_ADA <= 0.98 AND ATT.MY_ADA_CHANGE < 0.02 THEN 0 ELSE NULL END AS MY_ATT_INC_BY_2_PERC_PT
INTO ImpactAnalytics.dbo.FY15_MY_ATT_subtable
FROM
(SELECT MY_PROXY_ATT.SITE_NAME, MY_PROXY_ATT.SCHOOL_NAME, MY_PROXY_ATT.GRADE_ID, MY_PROXY_ATT.DIPLOMAS_NOW_SCHOOL, MY_PROXY_ATT.STUDENT_ID, MY_PROXY_ATT.SCHOOL_ID, MY_PROXY_ATT.PRE_SKILL_DESC, MY_PROXY_ATT.PRE_FREQ_DESC, MY_PROXY_ATT.PRE_SCENARIO, MY_PROXY_ATT.PRE_ATT_ADA, MY_PROXY_ATT.PRE_ATT_SCHOOL_OPEN, MY_PROXY_ATT.PRE_ATT_MISSING, MY_PROXY_ATT.PRE_ATT_NOT_ENROLLED, MY_PROXY_ATT.PRE_ATT_TRACK, MY_PROXY_ATT.PRE_ATT_TRACK_EVAL, MY_PROXY_ATT.PRE_INVALID_ADA, MY_PROXY_ATT.POST_SKILL_DESC, MY_PROXY_ATT.POST_FREQ_DESC, MY_PROXY_ATT.POST_SCENARIO, MY_PROXY_ATT.POST_ATT_ADA, MY_PROXY_ATT.POST_ATT_SCHOOL_OPEN, MY_PROXY_ATT.POST_ATT_MISSING, MY_PROXY_ATT.POST_ATT_NOT_ENROLLED, MY_PROXY_ATT.POST_ATT_TRACK, MY_PROXY_ATT.POST_ATT_TRACK_EVAL, MY_PROXY_ATT.POST_INVALID_ADA, MY_PROXY_ATT.DOSAGE_CATEGORY, MY_PROXY_ATT.TTL_TIME, MY_PROXY_ATT.ENROLLED_DAYS_CATEGORIES, MY_PROXY_ATT.CURRENTLY_ENROLLED, MY_PROXY_ATT.ENROLLED_DAYS, MY_PROXY_ATT.ATT_PERFORMANCE_CHANGE_LOCAL, MY_PROXY_ATT.ATT_PERFORMANCE_CHANGE_NATIONAL, MY_PROXY_ATT.ATT_ADA_CHANGE, MY_PROXY_ATT.ATT_ADA_CHANGE_TYPE, MY_PROXY_ATT.Attendance_IA, MY_PROXY_ATT.ELA_IA, MY_PROXY_ATT.Math_IA, MY_PROXY_ATT.Behavior_IA, MY_PROXY_ATT.FISCAL_YEAR, MY_PROXY_ATT.INDICATOR_ID, MY_PROXY_ATT.B_RULE_VAL1, MY_PROXY_ATT.B_RULE_VAL2, MY_PROXY_ATT.B_RULE_VAL3, MY_PROXY_ATT.B_RULE_VAL4, MY_PROXY_ATT.B_RULE_VAL5, MY_PROXY_ATT.EOY_ATT_ADA_CHANGE_TYPE, MY_PROXY_ATT.EOY_ATT_INC_BY_2_PERC_PT, MY_PROXY_ATT.GRADE_ID_RECODE, MY_PROXY_ATT.EOY_MET_56_DAYS, MY_PROXY_ATT.OG_EOY_LT_90_TO_GTE, MY_PROXY_ATT.PROXY_ATTMP_FREQ_DESC, MY_PROXY_ATT.PROXY_ATTMP_ADA, MY_PROXY_ATT.PROXY_ATTMP_TRACK, MY_PROXY_ATT.PROXY_ATTDJFM_ADA, MY_PROXY_ATT.PROXY_ATTDJFM_TRACK, MY_PROXY_ATT.PROXY_ATTCUMUL_ADA, MY_PROXY_ATT.PROXY_ATTCUMUL_TRACK,
CASE WHEN MY_PROXY_ATT.POST_ATT_ADA IS NULL AND MY_PROXY_ATT.PRE_FREQ_DESC LIKE 'ASON' AND MY_PROXY_ATT.MY_ADA IS NOT NULL THEN 'DJFM' WHEN MY_PROXY_ATT.POST_ATT_ADA IS NULL AND (MY_PROXY_ATT.PRE_FREQ_DESC LIKE '%Semester' OR MY_PROXY_ATT.PRE_FREQ_DESC LIKE '%Trimester' OR MY_PROXY_ATT.PRE_FREQ_DESC LIKE '%Quarter' OR MY_PROXY_ATT.PRE_FREQ_DESC LIKE '%Marking Period') AND MY_PROXY_ATT.MY_ADA IS NOT NULL THEN MY_PROXY_ATT.PROXY_ATTMP_FREQ_DESC WHEN MY_PROXY_ATT.POST_ATT_ADA IS NULL AND MY_PROXY_ATT.PRE_FREQ_DESC LIKE 'Attendance PrYr' AND MY_PROXY_ATT.MY_ADA IS NOT NULL THEN 'Cumulative To-Date' WHEN MY_PROXY_ATT.MY_ADA IS NULL THEN NULL ELSE MY_PROXY_ATT.POST_FREQ_DESC END AS MY_FREQ_DESC,
MY_PROXY_ATT.MY_ADA, MY_PROXY_ATT.MY_TRACK,
CASE WHEN MY_PROXY_ATT.PRE_ATT_ADA IS NOT NULL AND MY_PROXY_ATT.MY_ADA IS NOT NULL THEN MY_PROXY_ATT.MY_ADA - MY_PROXY_ATT.PRE_ATT_ADA ELSE NULL END AS MY_ADA_CHANGE,
CASE WHEN MY_PROXY_ATT.PRE_ATT_TRACK IS NOT NULL AND MY_PROXY_ATT.MY_TRACK IS NOT NULL THEN MY_PROXY_ATT.PRE_ATT_TRACK + ' to ' + MY_PROXY_ATT.MY_TRACK ELSE 'Insufficient Data' END AS MY_ATT_PERFORMANCE_CHANGE_LOCAL,
CASE WHEN MY_PROXY_ATT.PRE_ATT_ADA < 0.9 AND MY_PROXY_ATT.MY_ADA >= 0.9 THEN 1 WHEN MY_PROXY_ATT.PRE_ATT_ADA < 0.9 AND MY_PROXY_ATT.MY_ADA < 0.9 THEN 0 ELSE NULL END AS OG_MY_LT_90_TO_GTE
FROM
(SELECT ReportCYData.dbo.RPT_STUDENT_MAIN.SITE_NAME, ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_NAME, ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID, ReportCYData.dbo.RPT_STUDENT_MAIN.DIPLOMAS_NOW_SCHOOL, ReportCYData.dbo.RPT_STUDENT_MAIN.STUDENT_ID, ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_ID, prepost.PRE_SKILL_DESC, prepost.PRE_FREQ_DESC, prepost.PRE_SCENARIO, prepost.PRE_ATT_ADA, prepost.PRE_ATT_SCHOOL_OPEN, prepost.PRE_ATT_MISSING, prepost.PRE_ATT_NOT_ENROLLED, prepost.PRE_ATT_TRACK, prepost.PRE_ATT_TRACK_EVAL, prepost.PRE_INVALID_ADA, prepost.POST_SKILL_DESC, prepost.POST_FREQ_DESC, prepost.POST_SCENARIO, prepost.POST_ATT_ADA, prepost.POST_ATT_SCHOOL_OPEN, prepost.POST_ATT_MISSING, prepost.POST_ATT_NOT_ENROLLED, prepost.POST_ATT_TRACK, prepost.POST_ATT_TRACK_EVAL, prepost.POST_INVALID_ADA, prepost.DOSAGE_CATEGORY, prepost.TTL_TIME, prepost.ENROLLED_DAYS_CATEGORIES, prepost.CURRENTLY_ENROLLED, prepost.ENROLLED_DAYS, prepost.ATT_PERFORMANCE_CHANGE_LOCAL, prepost.ATT_PERFORMANCE_CHANGE_NATIONAL, prepost.ATT_ADA_CHANGE, prepost.ATT_ADA_CHANGE_TYPE, prepost.Attendance_IA, prepost.ELA_IA, prepost.Math_IA, prepost.Behavior_IA, prepost.FISCAL_YEAR, ReportCYData.dbo.RPT_SCHOOL_GRADE.INDICATOR_ID, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL1, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL3, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL4, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL5,
CASE WHEN prepost.PRE_ATT_ADA <= 0.99 AND ATT_ADA_CHANGE >= 0.01 THEN 'Increase by at least 1 percentage point' WHEN prepost.PRE_ATT_ADA <= 0.99 AND ATT_ADA_CHANGE <= -0.01 THEN 'Decrease by at least 1 percentage point' WHEN prepost.PRE_ATT_ADA <= 0.99 AND ATT_ADA_CHANGE < 0.01 AND ATT_ADA_CHANGE > -0.01 THEN 'No change' ELSE NULL END AS EOY_ATT_ADA_CHANGE_TYPE,
CASE WHEN prepost.PRE_ATT_ADA <= 0.98 AND ATT_ADA_CHANGE >= 0.02 THEN 1 WHEN prepost.PRE_ATT_ADA <= 0.98 AND ATT_ADA_CHANGE < 0.02 THEN 0 ELSE NULL END AS EOY_ATT_INC_BY_2_PERC_PT,
CASE WHEN ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID = 21 THEN -1 WHEN ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID = 22 THEN 0 ELSE ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID END AS GRADE_ID_RECODE,
CASE WHEN prepost.ENROLLED_DAYS >= 56 THEN 1 WHEN prepost.ENROLLED_DAYS < 56 THEN 0 ELSE NULL END AS EOY_MET_56_DAYS,
CASE WHEN prepost.PRE_ATT_ADA < 0.9 AND prepost.POST_ATT_ADA >= 0.9 THEN 1 WHEN prepost.PRE_ATT_ADA < 0.9 AND prepost.POST_ATT_ADA < 0.9 THEN 0 ELSE NULL END AS OG_EOY_LT_90_TO_GTE,
MY_PROXY_ATTMP.INTERVAL AS PROXY_ATTMP_FREQ_DESC, MY_PROXY_ATTMP.MY_ADA AS PROXY_ATTMP_ADA, MY_PROXY_ATTMP.SCALE_LOCAL AS PROXY_ATTMP_TRACK, MY_PROXY_ATTDJFM.MY_ADA AS PROXY_ATTDJFM_ADA, MY_PROXY_ATTDJFM.SCALE AS PROXY_ATTDJFM_TRACK, MY_PROXY_ATTCUMUL.MY_ADA AS PROXY_ATTCUMUL_ADA, MY_PROXY_ATTCUMUL.SCALE AS PROXY_ATTCUMUL_TRACK,
CASE WHEN prepost.POST_ATT_ADA IS NULL AND prepost.PRE_FREQ_DESC LIKE 'ASON' THEN MY_PROXY_ATTDJFM.MY_ADA WHEN prepost.POST_ATT_ADA IS NULL AND (prepost.PRE_FREQ_DESC LIKE '%Semester' OR prepost.PRE_FREQ_DESC LIKE '%Trimester' OR prepost.PRE_FREQ_DESC LIKE '%Quarter' OR prepost.PRE_FREQ_DESC LIKE '%Marking Period') THEN MY_PROXY_ATTMP.MY_ADA WHEN prepost.PRE_ATT_ADA IS NULL AND prepost.PRE_FREQ_DESC LIKE 'Attendance PrYr' THEN MY_PROXY_ATTCUMUL.MY_ADA ELSE prepost.POST_ATT_ADA END AS MY_ADA,
CASE WHEN prepost.POST_ATT_ADA IS NULL AND prepost.PRE_FREQ_DESC LIKE 'ASON' THEN MY_PROXY_ATTDJFM.SCALE WHEN prepost.POST_ATT_ADA IS NULL AND (prepost.PRE_FREQ_DESC LIKE '%Semester' OR prepost.PRE_FREQ_DESC LIKE '%Trimester' OR prepost.PRE_FREQ_DESC LIKE '%Quarter' OR prepost.PRE_FREQ_DESC LIKE '%Marking Period') THEN MY_PROXY_ATTMP.SCALE_LOCAL WHEN prepost.PRE_ATT_ADA IS NULL AND prepost.PRE_FREQ_DESC LIKE 'Attendance PrYr' THEN MY_PROXY_ATTCUMUL.SCALE ELSE prepost.POST_ATT_TRACK END AS MY_TRACK
FROM ReportCYData.dbo.RPT_SCHOOL_GRADE INNER JOIN (ReportCYData.dbo.RPT_STUDENT_MAIN INNER JOIN (((ReportCYData.dbo.EVAL_ATT AS prepost LEFT JOIN
(SELECT att1.STUDENT_ID, att1.CONFIG_ID, att1.INTERVAL, att1.PERF_ADA AS MY_ADA, att1.SCALE_LOCAL
FROM ReportCYData.dbo.RPT_PERFORMANCE_LEVEL_ATT AS att1 LEFT JOIN ReportCYData.dbo.RPT_PERFORMANCE_LEVEL_ATT AS att2
ON att1.STUDENT_ID = att2.STUDENT_ID AND att1.FREQUENCY_PERIOD_ID < att2.FREQUENCY_PERIOD_ID
WHERE att2.STUDENT_ID IS NULL AND att1.FISCAL_YEAR LIKE '2014-2015' AND att1.INTERVAL NOT LIKE '1st%' AND att1.Tag IS NULL AND (att1.INTERVAL LIKE '%Semester' OR att1.INTERVAL LIKE '%Trimester' OR att1.INTERVAL LIKE '%Quarter' OR att1.INTERVAL LIKE '%Marking Period') AND att1.PERF_ADA IS NOT NULL AND att1.PERF_ADA >= 0)
AS MY_PROXY_ATTMP ON (prepost.STUDENT_ID = MY_PROXY_ATTMP.STUDENT_ID))
LEFT JOIN
(SELECT attDJFM.STUDENT_ID, attDJFM.countDP, attDJFM.sumMD, attDJFM.sumNED, attDJFM.sumSO, attDJFM.MY_CONFIG_ID, attDJFM.MY_ADA,
attConfig11.SCALE
FROM
	(SELECT att12_2.STUDENT_ID, att12_2.countDP, att12_2.sumMD, att12_2.sumNED, att12_2.sumSO, att12_2.MY_CONFIG_ID,
	CASE WHEN att12_2.countDP >= 2 THEN (att12_2.sumSO - att12_2.sumNED - att12_2.sumMD)/(att12_2.sumSO - att12_2.sumNED) ELSE NULL END AS MY_ADA
	FROM
		(SELECT att12.STUDENT_ID, COUNT(att12.PERF_ADA) AS countDP, SUM(att12.MISSED_DAYS) AS sumMD, SUM(att12.NOT_ENROLLED_DAYS) AS sumNED, SUM(att12.SCHOOL_OPEN) AS sumSO, AVG(att12.CONFIG_ID) AS MY_CONFIG_ID
		FROM ReportCYData.dbo.RPT_PERFORMANCE_LEVEL_ATT AS att12
		WHERE (att12.INTERVAL LIKE 'Dec' OR att12.INTERVAL LIKE 'Jan' OR att12.INTERVAL LIKE 'Feb' OR att12.INTERVAL LIKE 'Mar') AND att12.PERF_ADA IS NOT NULL AND att12.PERF_ADA >= 0 AND att12.FISCAL_YEAR LIKE '2014-2015'
		GROUP BY att12.STUDENT_ID)
	AS att12_2)
AS attDJFM LEFT JOIN ReportCYData.dbo.ATTENDANCE_CONFIG_BENCHMARKS AS attConfig11
ON attDJFM.MY_CONFIG_ID = attConfig11.CONFIG_ID AND attDJFM.MY_ADA >= attConfig11.MIN_VALUE AND attDJFM.MY_ADA <= attConfig11.MAX_VALUE
WHERE attConfig11.FISCAL_YEAR LIKE '2014-2015')
AS MY_PROXY_ATTDJFM ON (prepost.STUDENT_ID = MY_PROXY_ATTDJFM.STUDENT_ID))
LEFT JOIN
(SELECT attCumul.STUDENT_ID, attCumul.avgFREQID, attCumul.countDP, attCumul.sumMD, attCumul.sumNED, attCumul.sumSO, attCumul.MY_CONFIG_ID, attCumul.MY_ADA, attConfig13.SCALE
FROM
	(SELECT att13_2.STUDENT_ID, att13_2.avgFREQID, att13_2.countDP, att13_2.sumMD, att13_2.sumNED, att13_2.sumSO, att13_2.MY_CONFIG_ID,
	CASE WHEN (((att13_2.avgFREQID >= 68 AND att13_2.avgFREQID <= 69) OR (att13_2.avgFREQID >= 35 AND att13_2.avgFREQID <= 37)) AND att13_2.countDP >= 1) OR (att13_2.avgFREQID >= 31 AND att13_2.avgFREQID <= 34 AND att13_2.countDP >= 2) OR (att13_2.avgFREQID >= 13 AND att13_2.avgFREQID <= 18 AND att13_2.countDP >= 3) OR (att13_2.avgFREQID >= 47 AND att13_2.avgFREQID <= 57 AND att13_2.countDP >= 5) THEN (((att13_2.sumSO - att13_2.sumNED - att13_2.sumMD) * 1.0)/((att13_2.sumSO - att13_2.sumNED) * 1.0)) ELSE NULL END AS MY_ADA
	FROM
		(SELECT att13.STUDENT_ID, AVG(att13.FREQUENCY_PERIOD_ID) AS avgFREQID, COUNT(att13.PERF_ADA) AS countDP, SUM(att13.MISSED_DAYS) AS sumMD, SUM(att13.NOT_ENROLLED_DAYS) AS sumNED, SUM(att13.SCHOOL_OPEN) AS sumSO, AVG(att13.CONFIG_ID) AS MY_CONFIG_ID
		FROM ReportCYData.dbo.RPT_PERFORMANCE_LEVEL_ATT as att13
		WHERE att13.INTERVAL NOT LIKE 'Attendance PrYr' AND att13.PERF_ADA IS NOT NULL AND att13.PERF_ADA >= 0 AND att13.FISCAL_YEAR LIKE '2014-2015'
		GROUP BY att13.STUDENT_ID)
	AS att13_2)
AS attCumul LEFT JOIN ReportCYData.dbo.ATTENDANCE_CONFIG_BENCHMARKS AS attConfig13
ON attCumul.MY_CONFIG_ID = attConfig13.CONFIG_ID AND attCumul.MY_ADA >= attConfig13.MIN_VALUE AND attCumul.MY_ADA <= attConfig13.MAX_VALUE
WHERE attConfig13.FISCAL_YEAR LIKE '2014-2015')
AS MY_PROXY_ATTCUMUL ON (prepost.STUDENT_ID = MY_PROXY_ATTCUMUL.STUDENT_ID))
ON ReportCYData.dbo.RPT_STUDENT_MAIN.STUDENT_ID = prepost.STUDENT_ID)
ON ReportCYData.dbo.RPT_SCHOOL_GRADE.SCHOOL_ID = ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_ID AND ReportCYData.dbo.RPT_SCHOOL_GRADE.GRADE_ID = ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID
WHERE ReportCYData.dbo.RPT_SCHOOL_GRADE.INDICATOR_ID = 1 AND prepost.FISCAL_YEAR LIKE '2014-2015' AND ReportCYData.dbo.RPT_SCHOOL_GRADE.FISCAL_YEAR LIKE '2014-2015')
AS MY_PROXY_ATT)
AS ATT
ORDER BY SITE_NAME, SCHOOL_NAME, GRADE_ID, STUDENT_ID;