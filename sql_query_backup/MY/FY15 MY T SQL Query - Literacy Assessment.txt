-- This query sets up data for FY15 mid-year student performance data reporting: Literacy Assessments.
-- Step 1 nests within step 2, which nests within step 3. Replace "*****ABOVE_QUERY*****" with the query text in the preceding step.
-- The final section (QUERY SYNTAX (SINGLE QUERY VERSION)) is the final query that should be set up in a stored procedure in the reporting DB. This step is just a copy of all previous steps, properly nested.


-- QUERY SYNTAX (Select latest literacy assessment, excluding pre/post tagged data points, from RPT_PERFORMANCE_LEVEL -- STEP 1):

SELECT allLIT1.CONFIG_ID, allLIT1.STUDENT_ID, allLIT1.FREQUENCY_PERIOD_ID, allLIT1.SKILL_ID, allLIT1.SKILL_DESCRIPTION, allLIT1.INTERVAL, allLIT1.INDICATOR_DESC, allLIT1.FREQ_SORT, allLIT1.SCHOOL_NAME, allLIT1.SITE_NAME, allLIT1.STUDENT_NAME, allLIT1.SCHOOL_ID, allLIT1.SITE_ID, allLIT1.PERF_DATE, allLIT1.PERFORMANCE_VALUE, allLIT1.PERFORMANCE_VALUE_NUMERIC, allLIT1.SCALE_LOCAL, allLIT1.SCALE_EVAL, allLIT1.SCALE_TYPE, allLIT1.PERF_DIRECTION, allLIT1.PROC_TYPE, allLIT1.PERF_RUN_DATE, allLIT1.INDICATOR_AREA_ID, allLIT1.CONFIG_NAME, allLIT1.PRIMARY_CM, allLIT1.INTERVENTION_TIME, allLIT1.DATA_POINT, allLIT1.CG_VALUE_DISPLAY, allLIT1.CG_VALUE_NUM, allLIT1.CG_LETTER_VIEW, allLIT1.CG_LETTER_VIEW_ALL, allLIT1.Tag, allLIT1.FISCAL_YEAR
FROM ReportCYData.dbo.RPT_PERFORMANCE_LEVEL AS allLIT1 LEFT JOIN ReportCYData.dbo.RPT_PERFORMANCE_LEVEL AS allLIT2
ON allLIT1.STUDENT_ID = allLIT2.STUDENT_ID AND allLIT1.INDICATOR_DESC = allLIT2.INDICATOR_DESC AND allLIT1.PERF_DATE < allLIT2.PERF_DATE
WHERE allLIT1.CONFIG_NAME LIKE 'ELA/Lit Assessment%' AND allLIT1.Tag IS NULL AND allLIT1.FISCAL_YEAR LIKE '2014-2015' AND allLIT2.STUDENT_ID IS NULL;


-- QUERY SYNTAX (Merge in numeric variable of local assessment performance level for MY/proxy -- STEP 2):

SELECT proxyLIT.CONFIG_ID, proxyLIT.STUDENT_ID, proxyLIT.FREQUENCY_PERIOD_ID, proxyLIT.SKILL_ID, proxyLIT.SKILL_DESCRIPTION, proxyLIT.INTERVAL, proxyLIT.INDICATOR_DESC, proxyLIT.FREQ_SORT, proxyLIT.SCHOOL_NAME, proxyLIT.SITE_NAME, proxyLIT.STUDENT_NAME, proxyLIT.SCHOOL_ID, proxyLIT.SITE_ID, proxyLIT.PERF_DATE, proxyLIT.PERFORMANCE_VALUE, proxyLIT.PERFORMANCE_VALUE_NUMERIC, ReportCYData.dbo.RPT_ASSESSMENT_NUM.SCALE_NUM, proxyLIT.SCALE_LOCAL, proxyLIT.SCALE_EVAL, proxyLIT.SCALE_TYPE, proxyLIT.PERF_DIRECTION, proxyLIT.PROC_TYPE, proxyLIT.PERF_RUN_DATE, proxyLIT.INDICATOR_AREA_ID, proxyLIT.CONFIG_NAME, proxyLIT.PRIMARY_CM, proxyLIT.INTERVENTION_TIME, proxyLIT.DATA_POINT, proxyLIT.CG_VALUE_DISPLAY, proxyLIT.CG_VALUE_NUM, proxyLIT.CG_LETTER_VIEW, proxyLIT.CG_LETTER_VIEW_ALL, proxyLIT.Tag, proxyLIT.FISCAL_YEAR
FROM
(*****ABOVE_QUERY*****)
AS proxyLIT LEFT JOIN ReportCYData.dbo.RPT_ASSESSMENT_NUM
ON ReportCYData.dbo.RPT_ASSESSMENT_NUM.SITE_ID = proxyLIT.SITE_ID AND ReportCYData.dbo.RPT_ASSESSMENT_NUM.ASSESSMENT_NAME LIKE proxyLIT.SKILL_DESCRIPTION AND ReportCYData.dbo.RPT_ASSESSMENT_NUM.SCALE LIKE proxyLIT.SCALE_LOCAL AND ReportCYData.dbo.RPT_ASSESSMENT_NUM.INDICATOR_AREA LIKE proxyLIT.INDICATOR_DESC;


-- QUERY SYNTAX (Merge in columns from RPT_STUDENT_MAIN, RPT_SCHOOL_GRADE, and the selected data points from the query above, to EVAL_ASSESSMENT (pre/post data). Select post/proxy-post data points, where the post data point is selected if available, otherwise use the latest performance data available. -- BASED ON ABOVE QUERY -- STEP 3):

SELECT ReportCYData.dbo.RPT_STUDENT_MAIN.SITE_NAME, ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_NAME, ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID, ReportCYData.dbo.RPT_STUDENT_MAIN.DIPLOMAS_NOW_SCHOOL, ReportCYData.dbo.RPT_STUDENT_MAIN.STUDENT_ID, ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_ID, prepost.ASSESSMENT_TYPE, prepost.PRE_VALUE, prepost.PRE_VALUE_DISPLAY, prepost.PRE_VALUE_NUM, prepost.PRE_DATE, prepost.PRE_DESC, prepost.PRE_TRACK_NUM, prepost.PRE_TRACK, prepost.PRE_TRACK_EVAL, prepost.PRE_TRACK_NATIONAL, prepost.POST_VALUE, prepost.POST_VALUE_DISPLAY, prepost.POST_VALUE_NUM, prepost.POST_DATE, prepost.POST_DESC, prepost.POST_TRACK_NUM, prepost.POST_TRACK, prepost.POST_TRACK_EVAL, prepost.POST_TRACK_NATIONAL, prepost.DOSAGE_CATEGORY, prepost.TTL_TIME, prepost.ENROLLED_DAYS_CATEGORIES, prepost.CURRENTLY_ENROLLED, prepost.ENROLLED_DAYS, prepost.LIT_ASSESS_RAWCHANGE, prepost.LIT_ASSESS_RAWCHANGE_DEGREE, prepost.LIT_ASSESS_PERFORMANCECHANGE_LOCAL, prepost.LIT_ASSESS_PERFORMANCECHANGE_NORMALIZED, prepost.LIT_ASSESS_PERCENTCHANGE, prepost.STATUS_SITE_DOSAGE_GOAL, prepost.SITE_DOSAGE_GOAL, prepost.Attendance_IA, prepost.ELA_IA, prepost.Math_IA, prepost.Behavior_IA, prepost.FISCAL_YEAR, ReportCYData.dbo.RPT_SCHOOL_GRADE.INDICATOR_ID, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL1, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL3, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL4, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL5,
CASE WHEN ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID = 21 THEN -1 WHEN ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID = 22 THEN 0 ELSE ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID END AS GRADE_ID_RECODE,
CASE WHEN prepost.TTL_TIME >= ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 1 WHEN prepost.TTL_TIME < ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 0 ELSE NULL END AS MY_MET_MARCH_DOSAGE,
MY_PROXY_LITAssess.PERF_DATE AS PROXY_DATE, MY_PROXY_LITAssess.SKILL_DESCRIPTION AS PROXY_DESC, MY_PROXY_LITAssess.PERFORMANCE_VALUE_NUMERIC AS PROXY_VALUE_NUM, MY_PROXY_LITAssess.SCALE_LOCAL AS PROXY_TRACK, MY_PROXY_LITAssess.SCALE_EVAL AS PROXY_TRACK_EVAL,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.PERF_DATE ELSE prepost.POST_DATE END AS MY_PERF_DATE,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SKILL_DESCRIPTION ELSE prepost.POST_DESC END AS MY_DESC,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.PERFORMANCE_VALUE_NUMERIC ELSE prepost.POST_VALUE_NUM END AS MY_VALUE_NUM,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN NULL ELSE prepost.POST_TRACK_NUM END AS MY_TRACK_NUM,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SCALE_LOCAL ELSE prepost.POST_TRACK END AS MY_TRACK,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SCALE_EVAL ELSE prepost.POST_TRACK_EVAL END AS MY_TRACK_EVAL
FROM ReportCYData.dbo.RPT_SCHOOL_GRADE INNER JOIN (ReportCYData.dbo.RPT_STUDENT_MAIN INNER JOIN (ReportCYData.dbo.EVAL_ASSESSMENT AS prepost LEFT JOIN 
(*****ABOVE_QUERY*****)
AS MY_PROXY_LITAssess ON (prepost.STUDENT_ID = MY_PROXY_LITAssess.STUDENT_ID)) ON (ReportCYData.dbo.RPT_STUDENT_MAIN.STUDENT_ID = prepost.STUDENT_ID)) ON (ReportCYData.dbo.RPT_SCHOOL_GRADE.SCHOOL_ID = prepost.SCHOOL_ID AND ReportCYData.dbo.RPT_SCHOOL_GRADE.GRADE_ID = ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID)
WHERE ReportCYData.dbo.RPT_SCHOOL_GRADE.INDICATOR_ID = 3 AND ReportCYData.dbo.RPT_SCHOOL_GRADE.FISCAL_YEAR LIKE '2014-2015' AND prepost.ASSESSMENT_TYPE LIKE 'LITERACY' AND prepost.FISCAL_YEAR LIKE '2014-2015';


-- QUERY SYNTAX (Re-populate old table, calculate additional post/proxy-post variables -- BASED ON ABOVE QUERY -- STEP 4 -- this extra step is required since calculations for new variables can't reference variables that were just created in the same query):

DROP TABLE ImpactAnalytics.dbo.FY15_MY_LIT_ASSESS_subtable
SELECT LIT.*,
CASE WHEN LIT.PRE_VALUE_NUM < LIT.MY_VALUE_NUM THEN 'Increase' WHEN LIT.PRE_VALUE_NUM = LIT.MY_VALUE_NUM THEN 'No Change' WHEN LIT.PRE_VALUE_NUM > LIT.MY_VALUE_NUM THEN 'Decrease' ELSE 'Insufficient Data' END AS MY_RAWCHANGE_DEGREE,
CASE WHEN LIT.PRE_TRACK IS NOT NULL AND LIT.MY_TRACK IS NOT NULL THEN LIT.PRE_TRACK + ' to ' + LIT.MY_TRACK ELSE 'Insufficient Data' END AS MY_PERFORMANCECHANGE_LOCAL,
CASE WHEN LIT.PRE_TRACK_EVAL IS NOT NULL AND LIT.MY_TRACK_EVAL IS NOT NULL THEN LIT.PRE_TRACK_EVAL + ' to ' + LIT.MY_TRACK_EVAL ELSE 'Insufficient Data' END AS MY_PERFORMANCECHANGE_NORMALIZED
INTO ImpactAnalytics.dbo.FY15_MY_LIT_ASSESS_subtable
FROM
(*****ABOVE_QUERY*****)
AS LIT
ORDER BY SITE_NAME, SCHOOL_NAME, GRADE_ID, STUDENT_ID;


-- QUERY SYNTAX (SINGLE QUERY VERSION):

DROP TABLE ImpactAnalytics.dbo.FY15_MY_LIT_ASSESS_subtable
SELECT LIT.*,
CASE WHEN LIT.PRE_VALUE_NUM < LIT.MY_VALUE_NUM THEN 'Increase' WHEN LIT.PRE_VALUE_NUM = LIT.MY_VALUE_NUM THEN 'No Change' WHEN LIT.PRE_VALUE_NUM > LIT.MY_VALUE_NUM THEN 'Decrease' ELSE 'Insufficient Data' END AS MY_RAWCHANGE_DEGREE,
CASE WHEN LIT.PRE_TRACK IS NOT NULL AND LIT.MY_TRACK IS NOT NULL THEN LIT.PRE_TRACK + ' to ' + LIT.MY_TRACK ELSE 'Insufficient Data' END AS MY_PERFORMANCECHANGE_LOCAL,
CASE WHEN LIT.PRE_TRACK_EVAL IS NOT NULL AND LIT.MY_TRACK_EVAL IS NOT NULL THEN LIT.PRE_TRACK_EVAL + ' to ' + LIT.MY_TRACK_EVAL ELSE 'Insufficient Data' END AS MY_PERFORMANCECHANGE_NORMALIZED
INTO ImpactAnalytics.dbo.FY15_MY_LIT_ASSESS_subtable
FROM
(SELECT ReportCYData.dbo.RPT_STUDENT_MAIN.SITE_NAME, ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_NAME, ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID, ReportCYData.dbo.RPT_STUDENT_MAIN.DIPLOMAS_NOW_SCHOOL, ReportCYData.dbo.RPT_STUDENT_MAIN.STUDENT_ID, ReportCYData.dbo.RPT_STUDENT_MAIN.SCHOOL_ID, prepost.ASSESSMENT_TYPE, prepost.PRE_VALUE, prepost.PRE_VALUE_DISPLAY, prepost.PRE_VALUE_NUM, prepost.PRE_DATE, prepost.PRE_DESC, prepost.PRE_TRACK_NUM, prepost.PRE_TRACK, prepost.PRE_TRACK_EVAL, prepost.PRE_TRACK_NATIONAL, prepost.POST_VALUE, prepost.POST_VALUE_DISPLAY, prepost.POST_VALUE_NUM, prepost.POST_DATE, prepost.POST_DESC, prepost.POST_TRACK_NUM, prepost.POST_TRACK, prepost.POST_TRACK_EVAL, prepost.POST_TRACK_NATIONAL, prepost.DOSAGE_CATEGORY, prepost.TTL_TIME, prepost.ENROLLED_DAYS_CATEGORIES, prepost.CURRENTLY_ENROLLED, prepost.ENROLLED_DAYS, prepost.LIT_ASSESS_RAWCHANGE, prepost.LIT_ASSESS_RAWCHANGE_DEGREE, prepost.LIT_ASSESS_PERFORMANCECHANGE_LOCAL, prepost.LIT_ASSESS_PERFORMANCECHANGE_NORMALIZED, prepost.LIT_ASSESS_PERCENTCHANGE, prepost.STATUS_SITE_DOSAGE_GOAL, prepost.SITE_DOSAGE_GOAL, prepost.Attendance_IA, prepost.ELA_IA, prepost.Math_IA, prepost.Behavior_IA, prepost.FISCAL_YEAR, ReportCYData.dbo.RPT_SCHOOL_GRADE.INDICATOR_ID, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL1, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL3, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL4, ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL5,
CASE WHEN ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID = 21 THEN -1 WHEN ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID = 22 THEN 0 ELSE ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID END AS GRADE_ID_RECODE,
CASE WHEN prepost.TTL_TIME >= ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 1 WHEN prepost.TTL_TIME < ReportCYData.dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 0 ELSE NULL END AS MY_MET_MARCH_DOSAGE,
MY_PROXY_LITAssess.PERF_DATE AS PROXY_DATE, MY_PROXY_LITAssess.SKILL_DESCRIPTION AS PROXY_DESC, MY_PROXY_LITAssess.PERFORMANCE_VALUE_NUMERIC AS PROXY_VALUE_NUM, MY_PROXY_LITAssess.SCALE_LOCAL AS PROXY_TRACK, MY_PROXY_LITAssess.SCALE_EVAL AS PROXY_TRACK_EVAL,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.PERF_DATE ELSE prepost.POST_DATE END AS MY_PERF_DATE,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SKILL_DESCRIPTION ELSE prepost.POST_DESC END AS MY_DESC,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.PERFORMANCE_VALUE_NUMERIC ELSE prepost.POST_VALUE_NUM END AS MY_VALUE_NUM,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN NULL ELSE prepost.POST_TRACK_NUM END AS MY_TRACK_NUM,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SCALE_LOCAL ELSE prepost.POST_TRACK END AS MY_TRACK,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SCALE_EVAL ELSE prepost.POST_TRACK_EVAL END AS MY_TRACK_EVAL
FROM ReportCYData.dbo.RPT_SCHOOL_GRADE INNER JOIN (ReportCYData.dbo.RPT_STUDENT_MAIN INNER JOIN (ReportCYData.dbo.EVAL_ASSESSMENT AS prepost LEFT JOIN 
(SELECT proxyLIT.CONFIG_ID, proxyLIT.STUDENT_ID, proxyLIT.FREQUENCY_PERIOD_ID, proxyLIT.SKILL_ID, proxyLIT.SKILL_DESCRIPTION, proxyLIT.INTERVAL, proxyLIT.INDICATOR_DESC, proxyLIT.FREQ_SORT, proxyLIT.SCHOOL_NAME, proxyLIT.SITE_NAME, proxyLIT.STUDENT_NAME, proxyLIT.SCHOOL_ID, proxyLIT.SITE_ID, proxyLIT.PERF_DATE, proxyLIT.PERFORMANCE_VALUE, proxyLIT.PERFORMANCE_VALUE_NUMERIC, ReportCYData.dbo.RPT_ASSESSMENT_NUM.SCALE_NUM, proxyLIT.SCALE_LOCAL, proxyLIT.SCALE_EVAL, proxyLIT.SCALE_TYPE, proxyLIT.PERF_DIRECTION, proxyLIT.PROC_TYPE, proxyLIT.PERF_RUN_DATE, proxyLIT.INDICATOR_AREA_ID, proxyLIT.CONFIG_NAME, proxyLIT.PRIMARY_CM, proxyLIT.INTERVENTION_TIME, proxyLIT.DATA_POINT, proxyLIT.CG_VALUE_DISPLAY, proxyLIT.CG_VALUE_NUM, proxyLIT.CG_LETTER_VIEW, proxyLIT.CG_LETTER_VIEW_ALL, proxyLIT.Tag, proxyLIT.FISCAL_YEAR
FROM
(SELECT allLIT1.CONFIG_ID, allLIT1.STUDENT_ID, allLIT1.FREQUENCY_PERIOD_ID, allLIT1.SKILL_ID, allLIT1.SKILL_DESCRIPTION, allLIT1.INTERVAL, allLIT1.INDICATOR_DESC, allLIT1.FREQ_SORT, allLIT1.SCHOOL_NAME, allLIT1.SITE_NAME, allLIT1.STUDENT_NAME, allLIT1.SCHOOL_ID, allLIT1.SITE_ID, allLIT1.PERF_DATE, allLIT1.PERFORMANCE_VALUE, allLIT1.PERFORMANCE_VALUE_NUMERIC, allLIT1.SCALE_LOCAL, allLIT1.SCALE_EVAL, allLIT1.SCALE_TYPE, allLIT1.PERF_DIRECTION, allLIT1.PROC_TYPE, allLIT1.PERF_RUN_DATE, allLIT1.INDICATOR_AREA_ID, allLIT1.CONFIG_NAME, allLIT1.PRIMARY_CM, allLIT1.INTERVENTION_TIME, allLIT1.DATA_POINT, allLIT1.CG_VALUE_DISPLAY, allLIT1.CG_VALUE_NUM, allLIT1.CG_LETTER_VIEW, allLIT1.CG_LETTER_VIEW_ALL, allLIT1.Tag, allLIT1.FISCAL_YEAR
FROM ReportCYData.dbo.RPT_PERFORMANCE_LEVEL AS allLIT1 LEFT JOIN ReportCYData.dbo.RPT_PERFORMANCE_LEVEL AS allLIT2
ON allLIT1.STUDENT_ID = allLIT2.STUDENT_ID AND allLIT1.INDICATOR_DESC = allLIT2.INDICATOR_DESC AND allLIT1.PERF_DATE < allLIT2.PERF_DATE
WHERE allLIT1.CONFIG_NAME LIKE 'ELA/Lit Assessment%' AND allLIT1.Tag IS NULL AND allLIT1.FISCAL_YEAR LIKE '2014-2015' AND allLIT2.STUDENT_ID IS NULL)
AS proxyLIT LEFT JOIN ReportCYData.dbo.RPT_ASSESSMENT_NUM
ON ReportCYData.dbo.RPT_ASSESSMENT_NUM.SITE_ID = proxyLIT.SITE_ID AND ReportCYData.dbo.RPT_ASSESSMENT_NUM.ASSESSMENT_NAME LIKE proxyLIT.SKILL_DESCRIPTION AND ReportCYData.dbo.RPT_ASSESSMENT_NUM.SCALE LIKE proxyLIT.SCALE_LOCAL AND ReportCYData.dbo.RPT_ASSESSMENT_NUM.INDICATOR_AREA LIKE proxyLIT.INDICATOR_DESC)
AS MY_PROXY_LITAssess ON (prepost.STUDENT_ID = MY_PROXY_LITAssess.STUDENT_ID)) ON (ReportCYData.dbo.RPT_STUDENT_MAIN.STUDENT_ID = prepost.STUDENT_ID)) ON (ReportCYData.dbo.RPT_SCHOOL_GRADE.SCHOOL_ID = prepost.SCHOOL_ID AND ReportCYData.dbo.RPT_SCHOOL_GRADE.GRADE_ID = ReportCYData.dbo.RPT_STUDENT_MAIN.GRADE_ID)
WHERE ReportCYData.dbo.RPT_SCHOOL_GRADE.INDICATOR_ID = 3 AND ReportCYData.dbo.RPT_SCHOOL_GRADE.FISCAL_YEAR LIKE '2014-2015' AND prepost.ASSESSMENT_TYPE LIKE 'LITERACY' AND prepost.FISCAL_YEAR LIKE '2014-2015')
AS LIT
ORDER BY SITE_NAME, SCHOOL_NAME, GRADE_ID, STUDENT_ID;